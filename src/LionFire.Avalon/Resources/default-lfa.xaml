<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:lfaL="clr-namespace:LionFire.Avalon"
    xmlns:lfa="clr-namespace:LionFire.Avalon;assembly=LionFire.Avalon"
     xmlns:lfat="clr-namespace:LionFire.Avalon.Tree;assembly=LionFire.Avalon"
    xmlns:lfatL="clr-namespace:LionFire.Avalon.Tree"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    >
    <!--xmlns:lfa="clr-namespace:LionFire.Avalon"-->
    
    <ResourceDictionary.MergedDictionaries>
        <lfa:SharedResourceDictionary Source="pack://application:,,,/LionFire.Avalon;component/Resources/Palette.xaml"/>
        <lfa:SharedResourceDictionary Source="pack://application:,,,/LionFire.Avalon;component/Resources/Fonts.xaml"/>
        <lfa:SharedResourceDictionary Source="pack://application:,,,/LionFire.Avalon;component/Resources/Text.xaml"/>

        <lfa:SharedResourceDictionary Source="pack://application:,,,/LionFire.Avalon;component/Resources/Buttons.xaml"/>
        <lfa:SharedResourceDictionary Source="pack://application:,,,/LionFire.Avalon;component/Resources/Scrollbar.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/LionFire.Avalon;component/Resources/LionButtons.xaml"/>
        <!--<lfa:SharedResourceDictionary Source="pack://application:,,,/LionFire.Avalon;component/Resources/LionButtons.xaml"/>-->
        <lfa:SharedResourceDictionary Source="pack://application:,,,/LionFire.Avalon;component/Resources/LionListBox.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Defaults -->
    <FontFamily x:Key="WindowTitleFont">Arial</FontFamily>
    
    <!-- Convenience -->
    
    <sys:Boolean x:Key="False">False</sys:Boolean>
    <sys:Boolean x:Key="True">True</sys:Boolean>

    <BooleanToVisibilityConverter x:Key="bvc"/>
    <lfa:BoolToVisibilityConverter x:Key="bvcHidden" FalseValue="Hidden"/>
    <lfa:BoolToVisibilityConverter x:Key="bvcInverse" TrueValue="Collapsed"  FalseValue="Visible"/>

    <!-- TABCONTROL -->
    
    <Style x:Key="TabControlHideHeaderWhenOne"  TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  ================== -->
    
    <Thickness x:Key="LionListItemMargin">6</Thickness>
    <Thickness x:Key="LionListItemPadding">6</Thickness>

    <HorizontalAlignment x:Key="ListItemHorizontalAlignment">Center</HorizontalAlignment>

    <!--  === Zap TabControl === -->
    
    <Style x:Key="ZapTabControl" TargetType="TabControl">

        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        
    </Style>

    <!--  === Inner Shadow ListView === -->

    <DataTemplate x:Key="InnerShadowListViewI">

        <Grid Grid.Column="2" Grid.Row="1" Margin="5" x:Name="View3">

            <Border Background="Black" CornerRadius="20">
                <!--<Border.Effect>
                        <DropShadowEffect ShadowDepth="4" BlurRadius="12" Color="Black" />
                        </Border.Effect>-->
            </Border>

            <Grid Margin="2">
                <!--<Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=Mask}" Stretch="None" />
                        </Grid.OpacityMask>-->

                <Border x:Name="Mask" CornerRadius="20" >
                    <Border.Background>
                        <LinearGradientBrush  EndPoint="0 1">
                            <GradientStop Offset="0" Color="#F444"/>
                            <GradientStop Offset="1" Color="#F222"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>

                <Border CornerRadius="20" Background="{x:Null}" BorderThickness="2" Margin="-2" BorderBrush="#F999">
                    <!--<Border.Effect>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="14" Color="White" Opacity="0.5"/>
                        </Border.Effect>-->
                </Border>

                <Border CornerRadius="20" Background="{x:Null}" BorderThickness="5" BorderBrush="#FFFF" Margin="-5">
                    <!--<Border.Effect>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="10" Color="White" Opacity="0.5"/>
                        </Border.Effect>-->

                    <ContentControl Content="{Binding}" />
                </Border>
            </Grid>

        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="InnerShadowListView">

        <Grid>
            <Border Background="Black" CornerRadius="20">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="4" BlurRadius="12" Color="Black" />
                </Border.Effect>
            </Border>

            <Grid>
                <Grid.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=Mask}" Stretch="None" />
                </Grid.OpacityMask>

                <Border x:Name="Mask" CornerRadius="20" >
                    <Border.Background>
                        <LinearGradientBrush  EndPoint="0 1">
                            <GradientStop Offset="0" Color="#F444"/>
                            <GradientStop Offset="1" Color="#F222"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>

                <Border CornerRadius="20" Background="{x:Null}" BorderThickness="3" Margin="-2" BorderBrush="#4FFF">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="0" BlurRadius="14" Color="White" Opacity="0.5"/>
                    </Border.Effect>
                </Border>

                <Border CornerRadius="20" Background="{x:Null}" BorderThickness="5" BorderBrush="#FFFF" Margin="-5">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="0" BlurRadius="10" Color="White" Opacity="0.5"/>
                    </Border.Effect>

                    <ContentControl Content="{Binding}" />
                </Border>
            </Grid>

        </Grid>
    </DataTemplate>
    

    <!--  ================== -->

    <!--  ========= TreeList ========== -->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="19"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="#00FFFFFF" Width="19" Height="13">
                        <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF7898B5" Width="9" Height="9" SnapsToDevicePixels="True">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.2" />
                                        <GradientStop Color="#FFC0B7A6" Offset="1" />
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path Data="M0,2L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z" Fill="#FF000000" Name="ExpandPath" Margin="1,1,1,1" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Path.Data" TargetName="ExpandPath">
                                <Setter.Value>
                                    <StreamGeometry>M0,2L0,3 5,3 5,2z</StreamGeometry>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type lfat:TreeListItem}">
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
    </Style>

    <Style TargetType="{x:Type lfat:TreeListItem}" x:Key="TreeListItemNodeStyle">
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" 
										  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
										  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
										  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
										  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

</ResourceDictionary>