@page "/v/{*path}"
@page "/v"
@namespace LionFire.Vos.Blazor

@using LionFire.Referencing
@using LionFire.Threading

@inject IServiceProvider ServiceProvider
@inject IVos rootManager
@inject NavigationManager navManager
@*@inject Microsoft.Extensions.Logging.ILogger<string> logger*@
@inject ILogger<VosExplorer> Logger

@using LionFire.Vos.Mounts
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.Extensions.Logging
@using LionFire.Persistence
@using System.Reflection
@using LionFire.Resolves
@using MudBlazor

<div class="VosExplorer">

<MudToolBar>
    <MudIconButton Icon="@Icons.Material.Filled.ArrowBackIos" Size="@MudBlazor.Size.Medium" Style="@("opacity:" + (History.Count == 0 ? "0.2" : "1"))" @onclick=@Back></MudIconButton>

    <MudIconButton Icon="@Icons.Material.Filled.ArrowForwardIos" Style="@("opacity:" + (ForwardHistory.Count == 0 ? "0.2" : "1"))" @onclick=@Forward></MudIconButton>

    <button @onclick="@(e=> GoToPath(".."))"><span class="oi oi-arrow-top" /></button>

    <div class="AddressBar">@Path</div>

    <MudSpacer />

    <MudIconButton Icon="@Icons.Material.Filled.Refresh" @onclick=@Refresh></MudIconButton>
</MudToolBar>


@*<i class="fas fa-angle-double-down"></i>*@
@if (listings == null)
{
    <p><em>Loading... @Path</em></p>
}
else
{
    <table class="table Listings">
        <thead>
            <tr>
                <th></th>
                <th>Name</th>
                <th>Type</th>
                @*<th>Dir</th>*@
            </tr>
        </thead>
        <tbody>
            @foreach (var listing in listings)
            {
                <tr>
                    <td>
                        <span @onclick="@(e => GoToPath(listing.Name))" class="@IconClasses(listing)" aria-hidden="true" data-glyph="battery-empty"></span>
                    </td>
                    <td>@listing.Name</td>
                    <td>@listing.DataType</td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>

    @if (Vob != null)
    {
        <table>
            <tr>
                <td>VobMounts</td>
                <td>@(VobMounts)</td>
            </tr>
        </table>
        <div class="panel">
            @if (VobMounts != null)
            {
                <div>
                    @VobMounts.Options
                </div>
                <h4>Read mounts</h4>
                @foreach (var mount in VobMounts.ReadMounts)
                {
                    <div>Mount: @mount.Key</div>
                }
                <h4>Write mounts</h4>
                @foreach (var mount in VobMounts.WriteMounts)
                {
                    <div>Mount: @mount.Key</div>
                }
            }

        </div>
    }

    @if (CurrentObject != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th></th>
                    <th>Property</th>
                    <th>Value</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pi in CurrentObject.GetType().GetProperties(BindingFlags.Instance | BindingFlags.Public))
                {
                    <tr>
                        <td>
                            @*<span @onclick="@(e => GoToPath(listing.Name))" class="@IconClasses(listing)" aria-hidden="true"></span>*@
                        </td>
                        <td>@pi.Name</td>
                        <td>@pi.GetValue(CurrentObject)</td>
                        @*<td></td>*@
                    </tr>
                }
            </tbody>
        </table>
    }
}

</div>
