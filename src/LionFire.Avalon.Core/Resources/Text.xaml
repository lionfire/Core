<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:lfaL="clr-namespace:LionFire.Avalon"
    xmlns:lfa="clr-namespace:LionFire.Avalon;assembly=LionFire.Avalon"
    >
    <ResourceDictionary.MergedDictionaries>
        <lfa:SharedResourceDictionary Source="pack://application:,,,/LionFire.Avalon;component/Resources/Palette.xaml"/>
        <lfa:SharedResourceDictionary Source="pack://application:,,,/LionFire.Avalon;component/Resources/Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    
    <!-- Text -->
    <Style x:Key="LargeText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource  LargeFont}"/>
    </Style>

    <Style x:Key="MediumText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource MediumFont}"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>

    <Style x:Key="Text" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource MediumFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" >
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource DarkColor1-0}"/>
            </Setter.Value>
        </Setter>

    </Style>

    <!--TextBox-->
    <Style  TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{DynamicResource MediumFont}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" >
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource DarkColor1-0}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBlock: Title -->
    <Style  x:Key="Title"
            TargetType="{x:Type TextBlock}" >
        <Setter Property="FontFamily" Value="{DynamicResource TitleFont}"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="4" Color="{DynamicResource WhiteColor}" ShadowDepth="3"  Opacity="0.5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="4"/>
    </Style>

    <Style x:Key="SmallTitle" 
           TargetType="{x:Type TextBlock}" BasedOn="{StaticResource LargeText}">
        <Setter Property="FontFamily" Value="{DynamicResource  SmallTitleFont}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="3"/>
        <!--<Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.50"/>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="4" Color="{DynamicResource WhiteColor}" ShadowDepth="3"  Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MiniLabel -->
    <Style x:Key="MiniLabel"
        TargetType="TextBlock" >
        <!--<Setter Property="Foreground" Value="#ff5555ca"/>-->
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontSize" Value="10"/>
    </Style>



    <!--Label-->
    <Style x:Key="LargeTextLabel" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{DynamicResource LargeFont}"/>
    </Style>

    <!--<Style x:Key="TitleLabel" TargetType="{x:Type Label}"  BasedOn="{StaticResource LargeTextLabel}">
        <Setter Property="FontSize" Value="24"/>
    </Style>-->

    <Style x:Key="TitleLabel" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="SubtitleLabel" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="BlockTitle" TargetType="{x:Type Label}">
        <!--TODO Deprecate-->
        <Setter Property="FontSize" Value="14"/>
    </Style>

    
    
    <!--Watermarked Text Box-->
    <!--Also see: http://stackoverflow.com/questions/833943/watermark-hint-text-textbox-in-wpf-->
    <!--Also see: http://www.ageektrapped.com/blog/the-missing-net-4-cue-banner-in-wpf-i-mean-watermark-in-wpf/-->
    <!--Also see: http://stackoverflow.com/questions/5593649/help-text-in-wpf-textbox-that-disppears-after-first-input-watermark-the-xaml-->
    <Thickness x:Key="TextBoxWatermarkBorderThickness">3</Thickness>
    <LinearGradientBrush x:Key="TextBoxWatermarkFG" EndPoint="0 1">
        <GradientStop Offset="0" Color="#FFFF"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TextBoxWatermarkBG" EndPoint="0 1">
        <GradientStop Offset="0" Color="#7F00"/>
        <GradientStop Offset="1" Color="#FF00"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TextBoxWatermarkBorderBrush" EndPoint="0 1">
        <GradientStop Offset="0" Color="#FF00"/>
        <GradientStop Offset="1" Color="#7F00"/>
    </LinearGradientBrush>
    
<!--Retrieved from http://stackoverflow.com/questions/5593649/help-text-in-wpf-textbox-that-disppears-after-first-input-watermark-the-xaml under assumed public domain license-->
    
    <Style x:Key="TextBoxText" TargetType="TextBlock">
        
    </Style>
    <Style x:Key="WatermarkTextBoxText" TargetType="TextBlock" BasedOn="{StaticResource TextBoxText}">
    </Style>

    <Style x:Key="WatermarkedTextBox" >
        <Setter Property="Control.Template" >
            <Setter.Value>
<ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>

                      
<Border x:Name="InternalWatermarkLabel" Visibility="Hidden"
        BorderThickness="{DynamicResource TextBoxWatermarkBorderThickness}" BorderBrush="{DynamicResource TextBoxWatermarkBorderBrush}" Background="{DynamicResource TextBoxWatermarkBG}">
                            <TextBlock Text="{TemplateBinding Tag}" Style="{DynamicResource WatermarkTextBoxText}"
                        Focusable="False"  VerticalAlignment="Top" Margin=" 2 1 5 0"
                       Foreground="{DynamicResource TextBoxWatermarkFG}"
                       Background="{DynamicResource TextBoxWatermarkBorderBG}"
                       />
                    </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="InternalWatermarkLabel" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value= "#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value= "#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
              
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
